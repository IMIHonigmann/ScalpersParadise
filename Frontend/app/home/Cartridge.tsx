/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/
'use client';

import * as THREE from 'three';
import React, { useEffect, useRef } from 'react';
import { useGLTF, useTexture } from '@react-three/drei';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
  nodes: {
    Cardridge_low_1: THREE.Mesh;
    Cardridge_low_2: THREE.Mesh;
  };
  materials: {
    CardridgeMat: THREE.MeshStandardMaterial;
    BOTW: THREE.MeshStandardMaterial;
  };
};

export function CartridgeModel(
  props: JSX.IntrinsicElements['group'] & { poster_path: string }
) {
  const { nodes, materials } = useGLTF('/Cartridge.gltf') as GLTFResult;
  const labelTexture = useTexture(
    `https://image.tmdb.org/t/p/w500${props.poster_path}`
  );
  labelTexture.colorSpace = THREE.SRGBColorSpace;

  const botwMaterial = React.useMemo(() => {
    const mat = materials.BOTW.clone();
    mat.envMapIntensity = 0.7;
    mat.metalness = 0;
    mat.roughness = 0.9;
    return mat;
  }, [materials.BOTW]);

  useEffect(() => {
    botwMaterial.map = labelTexture;
    botwMaterial.needsUpdate = true;
  }, [botwMaterial, labelTexture]);

  return (
    <group {...props} dispose={null}>
      <group name="RootNode" scale={1.5}>
        <mesh
          name="Cardridge_low_1"
          castShadow
          receiveShadow
          geometry={nodes.Cardridge_low_1.geometry}
          material={materials.CardridgeMat}
        />
        <mesh
          name="Cardridge_low_2"
          castShadow
          receiveShadow
          geometry={nodes.Cardridge_low_2.geometry}
          material={botwMaterial}
        />
      </group>
    </group>
  );
}

useGLTF.preload('/Cartridge.gltf');
